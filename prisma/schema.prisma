// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                    Int                  @id @default(autoincrement())
  name                  String
  email                 String               @unique
  password              String
  menu_items            MenuItem[]
  sales                 Sale[]
  suppliers             Supplier[]
  ingredients_purchased IngredientPurchase[]
}

model MenuItem {
  id         Int      @id @default(autoincrement())
  name       String
  price      Decimal  @db.Decimal(7, 2)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  client_id  Int
  client     Client   @relation(fields: [client_id], references: [id])
  sales      Sale[]
}

model Sale {
  id           Int      @id @default(autoincrement())
  quantity     Int
  price        Decimal  @db.Decimal(7, 2)
  total        Decimal  @db.Decimal(10, 2)
  created_at   DateTime @default(now())
  client_id    Int
  client       Client   @relation(fields: [client_id], references: [id])
  menu_item_id Int
  menu_item    MenuItem @relation(fields: [menu_item_id], references: [id])
}

model Supplier {
  id         Int      @id @default(autoincrement())
  name       String
  created_at DateTime @default(now())
  client_id  Int
  client     Client   @relation(fields: [client_id], references: [id])
}

enum UnitSystem {
  grams
  kg
  ml
  L
  unit
  half_dozen
  dozen
}

model IngredientPurchase {
  id          Int        @id @default(autoincrement())
  name        String
  quantity    Int
  unit_system UnitSystem
  price       Decimal    @db.Decimal(7, 2)
  total       Decimal    @db.Decimal(10, 2)
  created_at  DateTime   @default(now())
  client_id   Int
  client      Client     @relation(fields: [client_id], references: [id])
}
