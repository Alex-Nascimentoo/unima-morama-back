// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id                    Int                  @id @default(autoincrement())
  name                  String
  email                 String               @unique
  password              String
  menu_items            MenuItem[]
  sales                 Sale[]
  suppliers             Supplier[]
  ingredients_purchased IngredientPurchase[]
  ingredients           Ingredient[]
}

model MenuItem {
  id         Int      @id @default(autoincrement())
  name       String
  price      Decimal  @db.Decimal(7, 2)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  client_id  Int
  client     Client   @relation(fields: [client_id], references: [id], onDelete: Cascade)
  sales      Sale[]
}

model Sale {
  id           Int      @id @default(autoincrement())
  quantity     Int
  price        Decimal  @db.Decimal(7, 2)
  total        Decimal  @db.Decimal(10, 2)
  created_at   DateTime @default(now())
  client_id    Int
  client       Client   @relation(fields: [client_id], references: [id], onDelete: Cascade)
  menu_item_id Int
  menu_item    MenuItem @relation(fields: [menu_item_id], references: [id])
}

model Supplier {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  created_at  DateTime     @default(now())
  client_id   Int
  client      Client       @relation(fields: [client_id], references: [id], onDelete: Cascade)
  ingredients Ingredient[]
  notes       Note[]
}

model Note {
  id            Int      @id @default(autoincrement())
  text          String
  created_at    DateTime @default(now())
  supplier_id   Int
  supplier_note Supplier @relation(fields: [supplier_id], references: [id], onDelete: Cascade)
}

enum UnitSystem {
  grams
  kg
  ml
  L
  unit
  half_dozen
  dozen
}

model Ingredient {
  id         Int                  @id @default(autoincrement())
  name       String               @unique
  created_at DateTime             @default(now())
  purchases  IngredientPurchase[]
  client_id  Int
  client     Client               @relation(fields: [client_id], references: [id], onDelete: Cascade)
  supplier   Supplier[]
}

model IngredientPurchase {
  id            Int        @id @default(autoincrement())
  name          String
  quantity      Int
  unit_system   UnitSystem
  price         Decimal    @db.Decimal(7, 2)
  total         Decimal    @db.Decimal(10, 2)
  created_at    DateTime   @default(now())
  ingredient_id Int
  ingredient    Ingredient @relation(fields: [ingredient_id], references: [id])
  client_id     Int
  client        Client     @relation(fields: [client_id], references: [id], onDelete: Cascade)
}
